/*
 * SwissSign RA REST API
 * See https://github.com/SwissSign-AG/RaApi/README.md
 *
 * The version of the OpenAPI document: 3.4.4
 * Contact: ssc@swisssign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RequestDNS;
import org.openapitools.client.model.RequestDeviceSerialNumber;
import org.openapitools.client.model.RequestIP;
import org.openapitools.client.model.RequestRFC822;
import org.openapitools.client.model.RequestRole;
import org.openapitools.client.model.RequestScope;
import org.openapitools.client.model.RequestUPN;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RequestExtensions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class RequestExtensions {
  public static final String SERIALIZED_NAME_MICROSOFT_SECURITY_IDENTIFIER = "microsoftSecurityIdentifier";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_SECURITY_IDENTIFIER)
  @javax.annotation.Nullable
  private String microsoftSecurityIdentifier;

  public static final String SERIALIZED_NAME_MICROSOFT_POLICY_TEMPLATE_O_I_D = "microsoftPolicyTemplateOID";
  @SerializedName(SERIALIZED_NAME_MICROSOFT_POLICY_TEMPLATE_O_I_D)
  @javax.annotation.Nullable
  private String microsoftPolicyTemplateOID;

  public static final String SERIALIZED_NAME_REQUEST_D_N_S = "requestDNS";
  @SerializedName(SERIALIZED_NAME_REQUEST_D_N_S)
  @javax.annotation.Nullable
  private RequestDNS requestDNS;

  public static final String SERIALIZED_NAME_REQUEST_R_F_C822 = "requestRFC822";
  @SerializedName(SERIALIZED_NAME_REQUEST_R_F_C822)
  @javax.annotation.Nullable
  private RequestRFC822 requestRFC822;

  public static final String SERIALIZED_NAME_REQUEST_U_P_N = "requestUPN";
  @SerializedName(SERIALIZED_NAME_REQUEST_U_P_N)
  @javax.annotation.Nullable
  private RequestUPN requestUPN;

  public static final String SERIALIZED_NAME_REQUEST_I_P = "requestIP";
  @SerializedName(SERIALIZED_NAME_REQUEST_I_P)
  @javax.annotation.Nullable
  private RequestIP requestIP;

  public static final String SERIALIZED_NAME_REQUEST_ROLE = "requestRole";
  @SerializedName(SERIALIZED_NAME_REQUEST_ROLE)
  @javax.annotation.Nullable
  private RequestRole requestRole;

  public static final String SERIALIZED_NAME_REQUEST_DEVICE_SERIAL_NUMBER = "requestDeviceSerialNumber";
  @SerializedName(SERIALIZED_NAME_REQUEST_DEVICE_SERIAL_NUMBER)
  @javax.annotation.Nullable
  private RequestDeviceSerialNumber requestDeviceSerialNumber;

  public static final String SERIALIZED_NAME_REQUEST_SCOPE = "requestScope";
  @SerializedName(SERIALIZED_NAME_REQUEST_SCOPE)
  @javax.annotation.Nullable
  private RequestScope requestScope;

  public RequestExtensions() {
  }

  public RequestExtensions microsoftSecurityIdentifier(@javax.annotation.Nullable String microsoftSecurityIdentifier) {
    this.microsoftSecurityIdentifier = microsoftSecurityIdentifier;
    return this;
  }

  /**
   * Microsoft Security Identifier (SID) Override or add the X.509 extension is present in the certificate policy 
   * @return microsoftSecurityIdentifier
   */
  @javax.annotation.Nullable
  public String getMicrosoftSecurityIdentifier() {
    return microsoftSecurityIdentifier;
  }

  public void setMicrosoftSecurityIdentifier(@javax.annotation.Nullable String microsoftSecurityIdentifier) {
    this.microsoftSecurityIdentifier = microsoftSecurityIdentifier;
  }


  public RequestExtensions microsoftPolicyTemplateOID(@javax.annotation.Nullable String microsoftPolicyTemplateOID) {
    this.microsoftPolicyTemplateOID = microsoftPolicyTemplateOID;
    return this;
  }

  /**
   * Microsoft Policy Template Object Identifier. Override or add the X.509 extension is present in the certificate policy 
   * @return microsoftPolicyTemplateOID
   */
  @javax.annotation.Nullable
  public String getMicrosoftPolicyTemplateOID() {
    return microsoftPolicyTemplateOID;
  }

  public void setMicrosoftPolicyTemplateOID(@javax.annotation.Nullable String microsoftPolicyTemplateOID) {
    this.microsoftPolicyTemplateOID = microsoftPolicyTemplateOID;
  }


  public RequestExtensions requestDNS(@javax.annotation.Nullable RequestDNS requestDNS) {
    this.requestDNS = requestDNS;
    return this;
  }

  /**
   * Get requestDNS
   * @return requestDNS
   */
  @javax.annotation.Nullable
  public RequestDNS getRequestDNS() {
    return requestDNS;
  }

  public void setRequestDNS(@javax.annotation.Nullable RequestDNS requestDNS) {
    this.requestDNS = requestDNS;
  }


  public RequestExtensions requestRFC822(@javax.annotation.Nullable RequestRFC822 requestRFC822) {
    this.requestRFC822 = requestRFC822;
    return this;
  }

  /**
   * Get requestRFC822
   * @return requestRFC822
   */
  @javax.annotation.Nullable
  public RequestRFC822 getRequestRFC822() {
    return requestRFC822;
  }

  public void setRequestRFC822(@javax.annotation.Nullable RequestRFC822 requestRFC822) {
    this.requestRFC822 = requestRFC822;
  }


  public RequestExtensions requestUPN(@javax.annotation.Nullable RequestUPN requestUPN) {
    this.requestUPN = requestUPN;
    return this;
  }

  /**
   * Get requestUPN
   * @return requestUPN
   */
  @javax.annotation.Nullable
  public RequestUPN getRequestUPN() {
    return requestUPN;
  }

  public void setRequestUPN(@javax.annotation.Nullable RequestUPN requestUPN) {
    this.requestUPN = requestUPN;
  }


  public RequestExtensions requestIP(@javax.annotation.Nullable RequestIP requestIP) {
    this.requestIP = requestIP;
    return this;
  }

  /**
   * Get requestIP
   * @return requestIP
   */
  @javax.annotation.Nullable
  public RequestIP getRequestIP() {
    return requestIP;
  }

  public void setRequestIP(@javax.annotation.Nullable RequestIP requestIP) {
    this.requestIP = requestIP;
  }


  public RequestExtensions requestRole(@javax.annotation.Nullable RequestRole requestRole) {
    this.requestRole = requestRole;
    return this;
  }

  /**
   * Get requestRole
   * @return requestRole
   */
  @javax.annotation.Nullable
  public RequestRole getRequestRole() {
    return requestRole;
  }

  public void setRequestRole(@javax.annotation.Nullable RequestRole requestRole) {
    this.requestRole = requestRole;
  }


  public RequestExtensions requestDeviceSerialNumber(@javax.annotation.Nullable RequestDeviceSerialNumber requestDeviceSerialNumber) {
    this.requestDeviceSerialNumber = requestDeviceSerialNumber;
    return this;
  }

  /**
   * Get requestDeviceSerialNumber
   * @return requestDeviceSerialNumber
   */
  @javax.annotation.Nullable
  public RequestDeviceSerialNumber getRequestDeviceSerialNumber() {
    return requestDeviceSerialNumber;
  }

  public void setRequestDeviceSerialNumber(@javax.annotation.Nullable RequestDeviceSerialNumber requestDeviceSerialNumber) {
    this.requestDeviceSerialNumber = requestDeviceSerialNumber;
  }


  public RequestExtensions requestScope(@javax.annotation.Nullable RequestScope requestScope) {
    this.requestScope = requestScope;
    return this;
  }

  /**
   * Get requestScope
   * @return requestScope
   */
  @javax.annotation.Nullable
  public RequestScope getRequestScope() {
    return requestScope;
  }

  public void setRequestScope(@javax.annotation.Nullable RequestScope requestScope) {
    this.requestScope = requestScope;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestExtensions requestExtensions = (RequestExtensions) o;
    return Objects.equals(this.microsoftSecurityIdentifier, requestExtensions.microsoftSecurityIdentifier) &&
        Objects.equals(this.microsoftPolicyTemplateOID, requestExtensions.microsoftPolicyTemplateOID) &&
        Objects.equals(this.requestDNS, requestExtensions.requestDNS) &&
        Objects.equals(this.requestRFC822, requestExtensions.requestRFC822) &&
        Objects.equals(this.requestUPN, requestExtensions.requestUPN) &&
        Objects.equals(this.requestIP, requestExtensions.requestIP) &&
        Objects.equals(this.requestRole, requestExtensions.requestRole) &&
        Objects.equals(this.requestDeviceSerialNumber, requestExtensions.requestDeviceSerialNumber) &&
        Objects.equals(this.requestScope, requestExtensions.requestScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(microsoftSecurityIdentifier, microsoftPolicyTemplateOID, requestDNS, requestRFC822, requestUPN, requestIP, requestRole, requestDeviceSerialNumber, requestScope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestExtensions {\n");
    sb.append("    microsoftSecurityIdentifier: ").append(toIndentedString(microsoftSecurityIdentifier)).append("\n");
    sb.append("    microsoftPolicyTemplateOID: ").append(toIndentedString(microsoftPolicyTemplateOID)).append("\n");
    sb.append("    requestDNS: ").append(toIndentedString(requestDNS)).append("\n");
    sb.append("    requestRFC822: ").append(toIndentedString(requestRFC822)).append("\n");
    sb.append("    requestUPN: ").append(toIndentedString(requestUPN)).append("\n");
    sb.append("    requestIP: ").append(toIndentedString(requestIP)).append("\n");
    sb.append("    requestRole: ").append(toIndentedString(requestRole)).append("\n");
    sb.append("    requestDeviceSerialNumber: ").append(toIndentedString(requestDeviceSerialNumber)).append("\n");
    sb.append("    requestScope: ").append(toIndentedString(requestScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("microsoftSecurityIdentifier");
    openapiFields.add("microsoftPolicyTemplateOID");
    openapiFields.add("requestDNS");
    openapiFields.add("requestRFC822");
    openapiFields.add("requestUPN");
    openapiFields.add("requestIP");
    openapiFields.add("requestRole");
    openapiFields.add("requestDeviceSerialNumber");
    openapiFields.add("requestScope");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RequestExtensions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RequestExtensions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RequestExtensions is not found in the empty JSON string", RequestExtensions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RequestExtensions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RequestExtensions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("microsoftSecurityIdentifier") != null && !jsonObj.get("microsoftSecurityIdentifier").isJsonNull()) && !jsonObj.get("microsoftSecurityIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `microsoftSecurityIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("microsoftSecurityIdentifier").toString()));
      }
      if ((jsonObj.get("microsoftPolicyTemplateOID") != null && !jsonObj.get("microsoftPolicyTemplateOID").isJsonNull()) && !jsonObj.get("microsoftPolicyTemplateOID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `microsoftPolicyTemplateOID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("microsoftPolicyTemplateOID").toString()));
      }
      // validate the optional field `requestDNS`
      if (jsonObj.get("requestDNS") != null && !jsonObj.get("requestDNS").isJsonNull()) {
        RequestDNS.validateJsonElement(jsonObj.get("requestDNS"));
      }
      // validate the optional field `requestRFC822`
      if (jsonObj.get("requestRFC822") != null && !jsonObj.get("requestRFC822").isJsonNull()) {
        RequestRFC822.validateJsonElement(jsonObj.get("requestRFC822"));
      }
      // validate the optional field `requestUPN`
      if (jsonObj.get("requestUPN") != null && !jsonObj.get("requestUPN").isJsonNull()) {
        RequestUPN.validateJsonElement(jsonObj.get("requestUPN"));
      }
      // validate the optional field `requestIP`
      if (jsonObj.get("requestIP") != null && !jsonObj.get("requestIP").isJsonNull()) {
        RequestIP.validateJsonElement(jsonObj.get("requestIP"));
      }
      // validate the optional field `requestRole`
      if (jsonObj.get("requestRole") != null && !jsonObj.get("requestRole").isJsonNull()) {
        RequestRole.validateJsonElement(jsonObj.get("requestRole"));
      }
      // validate the optional field `requestDeviceSerialNumber`
      if (jsonObj.get("requestDeviceSerialNumber") != null && !jsonObj.get("requestDeviceSerialNumber").isJsonNull()) {
        RequestDeviceSerialNumber.validateJsonElement(jsonObj.get("requestDeviceSerialNumber"));
      }
      // validate the optional field `requestScope`
      if (jsonObj.get("requestScope") != null && !jsonObj.get("requestScope").isJsonNull()) {
        RequestScope.validateJsonElement(jsonObj.get("requestScope"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RequestExtensions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RequestExtensions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RequestExtensions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RequestExtensions.class));

       return (TypeAdapter<T>) new TypeAdapter<RequestExtensions>() {
           @Override
           public void write(JsonWriter out, RequestExtensions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RequestExtensions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RequestExtensions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RequestExtensions
   * @throws IOException if the JSON string is invalid with respect to RequestExtensions
   */
  public static RequestExtensions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RequestExtensions.class);
  }

  /**
   * Convert an instance of RequestExtensions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

