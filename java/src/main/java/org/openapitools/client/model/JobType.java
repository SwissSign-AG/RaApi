/*
 * SwissSign RA REST API
 * See https://github.com/SwissSign-AG/RaApi/README.md
 *
 * The version of the OpenAPI document: 2.5.10
 * Contact: ssc@swisssign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Certificate Order Task Type
 */
@JsonAdapter(JobType.Adapter.class)
public enum JobType {
  
  ISSUE_SUBMIT_CERTIFICATE_ORDER_JOB("ISSUE_SUBMIT_CERTIFICATE_ORDER_JOB"),
  
  ISSUE_CERTIFICATE_RENEWAL_VALIDATION_JOB("ISSUE_CERTIFICATE_RENEWAL_VALIDATION_JOB"),
  
  ISSUE_KEY_VALIDATION_JOB("ISSUE_KEY_VALIDATION_JOB"),
  
  ISSUE_PRE_VALIDATION_JOB("ISSUE_PRE_VALIDATION_JOB"),
  
  ISSUE_GENERATE_TBS_JOB("ISSUE_GENERATE_TBS_JOB"),
  
  ISSUE_POLICY_VALIDATION_JOB("ISSUE_POLICY_VALIDATION_JOB"),
  
  ISSUE_CAA_CHECK_VALIDATION_JOB("ISSUE_CAA_CHECK_VALIDATION_JOB"),
  
  ISSUE_DOMAIN_OWNER_CHECK_VALIDATION_JOB("ISSUE_DOMAIN_OWNER_CHECK_VALIDATION_JOB"),
  
  ISSUE_END_USER_EMAIL_VALIDATION_JOB("ISSUE_END_USER_EMAIL_VALIDATION_JOB"),
  
  ISSUE_PRE_LINTING_JOB("ISSUE_PRE_LINTING_JOB"),
  
  ISSUE_PRE_ISSUE_CERTIFICATE_JOB("ISSUE_PRE_ISSUE_CERTIFICATE_JOB"),
  
  ISSUE_CT_LOG_PRE_CERT_PUBLICATION_JOB("ISSUE_CT_LOG_PRE_CERT_PUBLICATION_JOB"),
  
  ISSUE_ISSUE_CERTIFICATE_JOB("ISSUE_ISSUE_CERTIFICATE_JOB"),
  
  ISSUE_ISSUE_SWS_CERTIFICATE_JOB("ISSUE_ISSUE_SWS_CERTIFICATE_JOB"),
  
  ISSUE_POST_ISSUE_CERTIFICATE_JOB("ISSUE_POST_ISSUE_CERTIFICATE_JOB"),
  
  ISSUE_FINALIZE_ISSUE_CERTIFICATE_JOB("ISSUE_FINALIZE_ISSUE_CERTIFICATE_JOB"),
  
  ISSUE_POST_LINTING_CERTIFICATE_JOB("ISSUE_POST_LINTING_CERTIFICATE_JOB"),
  
  ISSUE_CT_LOG_PUBLICATION_JOB("ISSUE_CT_LOG_PUBLICATION_JOB"),
  
  ISSUE_AUTHORIZATION_JOB("ISSUE_AUTHORIZATION_JOB"),
  
  ISSUE_NOTIFY_ISSUED_JOB("ISSUE_NOTIFY_ISSUED_JOB"),
  
  ISSUE_NOTIFY_RENEWAL_JOB("ISSUE_NOTIFY_RENEWAL_JOB"),
  
  ISSUE_UPDATE_RENEWAL_JOB("ISSUE_UPDATE_RENEWAL_JOB"),
  
  ISSUE_REVOKE_RENEWED_CERTIFICATE_JOB("ISSUE_REVOKE_RENEWED_CERTIFICATE_JOB"),
  
  ISSUE_NOTIFY_P12_RETRIEVAL_JOB("ISSUE_NOTIFY_P12_RETRIEVAL_JOB"),
  
  ISSUE_NOTIFY_HSM_RETRIEVAL_JOB("ISSUE_NOTIFY_HSM_RETRIEVAL_JOB"),
  
  ISSUE_SET_P12_PIN_JOB("ISSUE_SET_P12_PIN_JOB"),
  
  ISSUE_SEND_P12_PIN_JOB("ISSUE_SEND_P12_PIN_JOB"),
  
  PUBLISH_POST_CERTIFICATE_JOB("PUBLISH_POST_CERTIFICATE_JOB"),
  
  REVOKE_CERTIFICATE_JOB("REVOKE_CERTIFICATE_JOB"),
  
  PUBLISH_CERTIFICATE_ORDER_JOB("PUBLISH_CERTIFICATE_ORDER_JOB"),
  
  RA_AUTHORIZE_CERT_REVOKE_JOB("RA_AUTHORIZE_CERT_REVOKE_JOB"),
  
  RA_NOTIFY_AUTHORIZE_CERT_REVOKE_JOB("RA_NOTIFY_AUTHORIZE_CERT_REVOKE_JOB"),
  
  SEND_EMAIL_JOB("SEND_EMAIL_JOB"),
  
  RESEND_END_USER_SELF_SERVICE_VALIDATION_EMAIL_JOB("RESEND_END_USER_SELF_SERVICE_VALIDATION_EMAIL_JOB"),
  
  REVOKE_SWS_CERTIFICATE_JOB("REVOKE_SWS_CERTIFICATE_JOB"),
  
  MANUAL_PUBLISH_CERTIFICATE_JOB("MANUAL_PUBLISH_CERTIFICATE_JOB"),
  
  MANUAL_UNPUBLISH_CERTIFICATE_JOB("MANUAL_UNPUBLISH_CERTIFICATE_JOB"),
  
  SCEP_PKI_OPERATION_JOB("SCEP_PKI_OPERATION_JOB"),
  
  MICROSOFT_CES_REQUEST_JOB("MICROSOFT_CES_REQUEST_JOB"),
  
  MICROSOFT_CES_STATUS_JOB("MICROSOFT_CES_STATUS_JOB"),
  
  MICROSOFT_ENROLMENT_POLICIES_JOB("MICROSOFT_ENROLMENT_POLICIES_JOB"),
  
  MICROSOFT_CES_QUERY_STATUS_JOB("MICROSOFT_CES_QUERY_STATUS_JOB"),
  
  MICROSOFT_CES_UNKNOWN_JOB("MICROSOFT_CES_UNKNOWN_JOB"),
  
  SNOW_REVOKE_ALL_CLIENT_CERTIFICATES_JOB("SNOW_REVOKE_ALL_CLIENT_CERTIFICATES_JOB"),
  
  SNOW_REVOKE_ALL_POLICY_MAPPING_CERTIFICATES_JOB("SNOW_REVOKE_ALL_POLICY_MAPPING_CERTIFICATES_JOB");

  private String value;

  JobType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static JobType fromValue(String value) {
    for (JobType b : JobType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<JobType> {
    @Override
    public void write(final JsonWriter jsonWriter, final JobType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public JobType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return JobType.fromValue(value);
    }
  }
}

