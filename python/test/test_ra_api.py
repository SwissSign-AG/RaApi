# coding: utf-8

"""
    SwissSign RA REST API

    See https://github.com/SwissSign-AG/RaApi/README.md

    The version of the OpenAPI document: 3.4.4
    Contact: ssc@swisssign.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swisssign_ra_api.v2.api.ra_api import RAApi


class TestRAApi(unittest.TestCase):
    """RAApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RAApi()

    def tearDown(self) -> None:
        pass

    def test_add_certificate_order_additional_recipients(self) -> None:
        """Test case for add_certificate_order_additional_recipients

        Add additional recipients to Certificate Order
        """
        pass

    def test_create_client_prevalidated_domains(self) -> None:
        """Test case for create_client_prevalidated_domains

        Register new pre validated domains for the selected client given its reference Id
        """
        pass

    def test_delete_certificate_order_additional_recipients(self) -> None:
        """Test case for delete_certificate_order_additional_recipients

        Delete additional recipients to Certificate Order
        """
        pass

    def test_delete_client_prevalidated_domain(self) -> None:
        """Test case for delete_client_prevalidated_domain

        Delete pre validated domain for the selected reference Id
        """
        pass

    def test_delete_client_prevalidated_domain_token(self) -> None:
        """Test case for delete_client_prevalidated_domain_token

        Delete pre validated domain token for the selected reference Id
        """
        pass

    def test_get_certificate_chain(self) -> None:
        """Test case for get_certificate_chain

        Retrieve the certificate chain for the given Order reference
        """
        pass

    def test_get_certificate_order(self) -> None:
        """Test case for get_certificate_order

        Retrieve a Certificate Order given the Order reference
        """
        pass

    def test_get_certificate_order_status(self) -> None:
        """Test case for get_certificate_order_status

        Retrieve a Certificate Order status given the Order reference
        """
        pass

    def test_get_certificate_order_tasks(self) -> None:
        """Test case for get_certificate_order_tasks

        Retrieve a Certificate Order Tasks given the Order reference
        """
        pass

    def test_get_certificate_orders(self) -> None:
        """Test case for get_certificate_orders

        Search Certificate Orders
        """
        pass

    def test_get_client(self) -> None:
        """Test case for get_client

        Get a client given its reference Id
        """
        pass

    def test_get_client_prevalidated_domain(self) -> None:
        """Test case for get_client_prevalidated_domain

        Get pre validated domains for the selected domain reference Id
        """
        pass

    def test_get_client_prevalidated_domains(self) -> None:
        """Test case for get_client_prevalidated_domains

        Get the list of pre validated domains for the selected client given its reference Id
        """
        pass

    def test_issue_certificate(self) -> None:
        """Test case for issue_certificate

        Issue certificate using CSR
        """
        pass

    def test_issue_certificate_v22(self) -> None:
        """Test case for issue_certificate_v22

        Issue certificate using extended request attributes
        """
        pass

    def test_jwt(self) -> None:
        """Test case for jwt

        Produce a user JWT
        """
        pass

    def test_list_certificate_order_additional_recipients(self) -> None:
        """Test case for list_certificate_order_additional_recipients

        Obtain a list of additional Certificate Order recipients
        """
        pass

    def test_publish_certificate(self) -> None:
        """Test case for publish_certificate

        Send a certificate publication request for selected Certificate Order
        """
        pass

    def test_replace_certificate_order_tags(self) -> None:
        """Test case for replace_certificate_order_tags

        Replace Certificate Order custom tags
        """
        pass

    def test_reset_client_prevalidated_domain(self) -> None:
        """Test case for reset_client_prevalidated_domain

        Reset pre validated domain token for the selected reference Id
        """
        pass

    def test_revoke_certificates(self) -> None:
        """Test case for revoke_certificates

        Revoke certificates
        """
        pass

    def test_search_clients(self) -> None:
        """Test case for search_clients

        Search Clients available to the RA Operator
        """
        pass

    def test_search_paged_certificate_orders(self) -> None:
        """Test case for search_paged_certificate_orders

        Search Certificate Orders
        """
        pass

    def test_search_paged_clients(self) -> None:
        """Test case for search_paged_clients

        Search Clients available to the RA Operator
        """
        pass

    def test_unpublish_certificate(self) -> None:
        """Test case for unpublish_certificate

        Send a certificate un-publication request for selected Certificate Order
        """
        pass

    def test_validate_client_prevalidated_domain(self) -> None:
        """Test case for validate_client_prevalidated_domain

        Prevalidate domain for the selected domain reference Id
        """
        pass

    def test_validate_issue_request(self) -> None:
        """Test case for validate_issue_request

        Validate an issue request structure. Validates the request but does not issue any certificate
        """
        pass


if __name__ == '__main__':
    unittest.main()
