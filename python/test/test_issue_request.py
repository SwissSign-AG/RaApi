# coding: utf-8

"""
    SwissSign RA REST API

    See https://github.com/SwissSign-AG/RaApi/README.md

    The version of the OpenAPI document: 3.4.4
    Contact: ssc@swisssign.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swisssign_ra_api.v2.models.issue_request import IssueRequest

class TestIssueRequest(unittest.TestCase):
    """IssueRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IssueRequest:
        """Test IssueRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IssueRequest`
        """
        model = IssueRequest()
        if include_optional:
            return IssueRequest(
                product_reference = 'pma-10877aec-412f-4b96-a5d4-f5f95da8634e',
                csr = '----BEGIN CERTIFICATE REQUEST-----
MIICijCCAXICAQAwGTEXMBUGA1UEAwwOd3d3LnNhbXBsZS5vcmcwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCY6+oWhcAadQJ3kuNHZIbujX6yt11MN7RN
YIf1+tCFK/zHlbrekiochGQXHasbbTcAqVPM+atvvPl5BMQO6BW8/RzpKC05WAQL
wM580Qnq7WcOUX+h+tU6v0W/mRF0KyEt2eI7W+J1ec27AYS2SMeDVyVN/dY7Ca8o
x+glgw6MRjh4EQyk9E6v0BU5DaHqvUEhFArloW/t3XCps2Oxd15gqjm0tuEzaXul
6VOM4e7CjQuapG1D4mD6TZwEl9A26eVROiRbsgWMCjSYOrCDxsel873kDJoYv+8E
YxbAxFlzg7RVBI0Th3vUAgawaPjMz7q2xOOYv+L64fI4s0WQFbbrAgMBAAGgLDAq
BgkqhkiG9w0BCQ4xHTAbMBkGA1UdEQQSMBCCDnd3dy5zYW1wbGUub3JnMA0GCSqG
SIb3DQEBCwUAA4IBAQAzegZ0PvLM22mie5eolWC9VHH00s3eazvYYpvzecsfDr9k
o8omcsfZVE679R7WmAmicPLC8NYMTPGQHStu3MKyxAzw/GHvi2C1BSBx3lx0WDno
Jh02r5J/qurxGTZihSr9GnUAU1I3Ht5Lboz/ITEslNMOzZFFIm7e2knfqchhyQRS
ilT3LgHWAc490z/lWg63IbC4DVfl5SRtupKjFixyJKU7rHnkBb9fwBGn/mcQPcvq
g9W5jRRvcCfmufSdtuzkuvVTR7AcqzrlAFhmwMv1Yll2eMv2qD40jjb0sF45bcu0
CRg0mu4um+/DZaWV6IUOiTPj6wewH+909Ov8f2G+
----END CERTIFICATE REQUEST-----
',
                overrides = swisssign_ra_api.v2.models.request_overrides.RequestOverrides(
                    subject_dn = 'c=US,l=Denver,o=Acme Ltd,cn=Sample', 
                    validity = 1, 
                    request_extensions = swisssign_ra_api.v2.models.request_extensions.RequestExtensions(
                        microsoft_security_identifier = 'S-1-5-32', 
                        microsoft_policy_template_oid = '2.16.756.3.2.1.0', 
                        request_dns = swisssign_ra_api.v2.models.request_dns.RequestDNS(
                            values = [
                                swisssign_ra_api.v2.models.dns.DNS(
                                    dns = 'support.sample.org', 
                                    include_base_domain_for_wildcard = True, 
                                    include_www_domain = True, )
                                ], ), 
                        request_rfc822 = swisssign_ra_api.v2.models.request_rfc822.RequestRFC822(
                            values = [
                                'sample@sample.org'
                                ], ), 
                        request_upn = swisssign_ra_api.v2.models.request_upn.RequestUPN(
                            values = [
                                'upn@sample.org'
                                ], ), 
                        request_ip = swisssign_ra_api.v2.models.request_ip.RequestIP(
                            values = [
                                '1.1.1.1'
                                ], ), 
                        request_role = swisssign_ra_api.v2.models.request_role.RequestRole(
                            value = 'MY_ROLE', ), 
                        request_device_serial_number = swisssign_ra_api.v2.models.request_device_serial_number.RequestDeviceSerialNumber(
                            value = 'ABCDEF123456XYZ', ), 
                        request_scope = swisssign_ra_api.v2.models.request_scope.RequestScope(
                            value = '00FF01FE02FD03FC', ), ), ),
                additional_recipients = [
                    swisssign_ra_api.v2.models.additional_recipient.AdditionalRecipient(
                        email = 'shared.mailbox@sample.org', 
                        recipient_type = 'DNS_OWNER_CHECK_EMAIL_LINK', 
                        language = 'NEUTRAL', )
                    ],
                registration_documents = [
                    swisssign_ra_api.v2.models.registration_document.RegistrationDocument(
                        document_name = 'my_document.pdf', 
                        document = '', )
                    ],
                tags = [
                    'my-cmdb-label'
                    ],
                note = 'user free text',
                publish_certificate = True,
                synchrone = True,
                accept_tand_c = True,
                include_certificate_chain = True
            )
        else:
            return IssueRequest(
                product_reference = 'pma-10877aec-412f-4b96-a5d4-f5f95da8634e',
        )
        """

    def testIssueRequest(self):
        """Test IssueRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
